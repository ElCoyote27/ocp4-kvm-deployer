---
 - name: deploy ocp4 configs default state
   set_fact:
     deploy_ocp4_configs: true
   tags: [ ignitions, deploy_nodes ]

 - name: create the directory {{ openshift_install_dir }} to store the ignition files
   file:
     path: "{{ openshift_install_dir }}"
     state: directory
   tags: [ ignitions, deploy_nodes ]

 - name: check the status of {{ openshift_install_dir }}/install-config.yaml.original
   stat:
     path: "{{ openshift_install_dir }}/install-config.yaml.original"
   register: config_file_check
   tags: [ ignitions, deploy_nodes ]

 - name: deploy a temporary ocp4 install-config /tmp/install-config.yaml
   template:
     src: install-config.yaml.j2
     dest: /tmp/install-config.yaml
   when: config_file_check.stat.exists
   changed_when: false
   tags: [ ignitions, deploy_nodes ]

 - name: get the status of /tmp/install-config.yaml
   stat:
     path: /tmp/install-config.yaml
   register: temp_install_config
   when: config_file_check.stat.exists
   tags: [ ignitions, deploy_nodes ]

 - name: compare {{ openshift_install_dir }}/install-config.yaml.original and /tmp/install-config.yaml
   vars:
     - tmp_config: "{{ temp_install_config.stat.checksum }}"
     - deployed_config: "{{ config_file_check.stat.checksum }}"
   set_fact:
     deploy_ocp4_configs: "{{ true if tmp_config == deployed_config else false }}"
   #when: tmp_config != deployed_config
   tags: [ ignitions, deploy_nodes ]

 - name: Create ocp4 install config file {{ openshift_install_dir }}/install-config.yaml
   template:
     src: install-config.yaml.j2
     dest: "{{ openshift_install_dir }}/install-config.yaml"
     owner: "{{ local_user_account }}"
     group: "{{ local_user_account }}"
   when: deploy_ocp4_configs|bool
   tags: [ ignitions, deploy_nodes ]

 - name: Save ocp4 install-config {{ openshift_install_dir }}/install-config.yaml.original from deletion
   copy:
     dest: "{{ openshift_install_dir }}/install-config.yaml.original"
     src: "{{ openshift_install_dir }}/install-config.yaml"
   when: deploy_ocp4_configs|bool
   tags: [ ignitions, deploy_nodes ]

 - name: Create ignition files
   command: "/usr/local/bin/openshift-install --dir={{ openshift_install_dir }} create ignition-configs"
   args:
     creates: "{{ openshift_install_dir }}/.openshift_install_state.json"
   when: deploy_ocp4_configs|bool
   tags: [ ignitions, deploy_nodes ]

 - name: "Recursively change ownership of {{ openshift_install_dir }}"
   file:
     path: "{{ openshift_install_dir }}"
     state: directory
     recurse: yes
     owner: "{{ local_user_account }}"
     group: "{{ local_user_account }}"
   tags: [ ignitions, deploy_nodes ]