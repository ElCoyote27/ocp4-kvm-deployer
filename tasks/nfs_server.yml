---
- name: install nfs-utils
  yum:
    name: nfs-utils
    state: present
  tags: [ postinstall, nfs ]

- name: Open up firewall ports
  firewalld:
    permanent: yes
    immediate: yes
    state: enabled
    port: "{{ item }}"
  with_items:
    - 80/tcp
    - 443/tcp
    - 6443/tcp
    - 22623/tcp
    - 32700/tcp
    - 2049/tcp
    - 2049/udp
  tags: [ postinstall, nfs ]

- name: Create NFS export directory
  file:
    path: /export
    state: directory
    mode: 0777
    owner: nfsnobody
    group: nfsnobody
  notify:
    - restart nfs
  tags: [ postinstall, nfs ]

- name: Copy NFS export conf file
  copy:
    src: templates/nfs-exports
    dest: /etc/exports
  notify:
    - restart nfs
  tags: [ postinstall, nfs ]

- name: Starting NFS services
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  with_items:
    - rpcbind
    - nfs-server
    - nfs-lock
    - nfs-idmap
  tags: [ postinstall, nfs ]

- name: Copying over nfs-provisioner rbac
  copy:
    src: templates/nfs-provisioner-rbac.yaml
    dest: /usr/local/src/nfs-provisioner-rbac.yaml
    owner: root
    group: root
    mode: 0666
  tags: [ postinstall, nfs ]

- name: Copying over nfs-provisioner deployment
  template:
    src: templates/nfs-provisioner-deployment.yaml.j2
    dest: /usr/local/src/nfs-provisioner-deployment.yaml
    owner: root
    group: root
    mode: 0666
  tags: [ postinstall, nfs ]

- name: Copying over nfs-provisioner storageclass
  copy:
    src: templates/nfs-provisioner-sc.yaml
    dest: /usr/local/src/nfs-provisioner-sc.yaml
    owner: root
    group: root
    mode: 0666
  tags: [ postinstall, nfs ]

- name: Copying over a sample PVC file for NFS
  copy:
    src: templates/registry-pvc.yaml
    dest: /usr/local/src/registry-pvc.yaml
    mode: '0555'
  tags: [ postinstall, nfs ]

- name: Copying over a NFS persistant volume claim
  copy:
    src: templates/nfs-volume-claim.j2
    dest: /usr/local/src/nfs-volume-claim.yml
    mode: '0555'
  tags: [ postinstall, nfs ]


- name: setup nfs storage class
  shell: |
    if ! /usr/local/bin/oc get storageclass | grep -q nfs-storage
    then
        bash {{ project_dir }}/lib/qubinode_nfs_provisioner_setup.sh
    fi
  environment:
    KUBECONFIG: "{{ openshift_install_dir }}/auth/kubeconfig"
  register: deploy_nfs_server
  tags: [ deploy_nodes, rhcos, postinstall, nfs ]

- name: setup nfs volume claim
  shell: |
    if oc get storageclass | grep -q nfs-storage
    then
      /usr/local/bin/oc create -f /usr/local/src/nfs-volume-claim.yml
      {% raw %}
      /usr/local/bin/oc patch configs.imageregistry.operator.openshift.io cluster --type merge --patch '{\"spec\":{\"storage\":{\"pvc\":{}}}}'
      {% endraw %}
      if /usr/local/bin/oc get configs.imageregistry.operator.openshift.io -o json | jq .items[0].spec.storage | grep -q image-registry-storage
      then
        echo "nfs claim created"
      else
        echo "nfs claim not created"
      fi
    fi
  environment:
    KUBECONFIG: "{{ openshift_install_dir }}/auth/kubeconfig"
  register: create_nfs_claim
  tags: [ deploy_nodes, rhcos, postinstall, nfs ]

- debug:
    var: create_nfs_claim
  tags: [ deploy_nodes, rhcos, postinstall, nfs ]